@using DACN_DVTRUCTUYEN.Utilities;
@using DACN_DVTRUCTUYEN.Areas.User.Services;
@using System.Web;
@{
    Context.Request.Cookies.TryGetValue("token", out string? token);
    Context.Request.Cookies.TryGetValue("id", out string? id);
}

<!DOCTYPE html>
<html lang="en">
@if (OrderBackgroundService.bancheck(token, id) == true)
{
    IgnoreBody();
    <head>
        <meta http-equiv='refresh' content='0; URL=/User/Logout'>
    </head>
}
else
{
    <head>
        <meta charset="utf-8" />
        <link rel="stylesheet" href="~/styles.css" />
        <title>@ViewData["Title"] | DB Shop</title>

        <link rel="icon" type="image/x-icon" href="/Logo.png">
        <style>
            /* onErrorImg.css */
            .onerror-img {
                width: 50px;
                height: 50px;
                position: relative; /* Cần thiết cho onerror-img */
            }


                .onerror-img::before {
                    content: '';
                    position: absolute;
                    top: 0;
                    left: 0;
                    width: 50px;
                    height: 50px;
                    background-image: url('\\logo.png'); /* Đường dẫn mặc định */
                    background-repeat: no-repeat;
                    background-position: center;
                    background-size: cover;
                    opacity: 1; /* Ẩn ảnh mặc định */
                    transition: opacity 0.5s ease; /* Tùy chỉnh hiệu ứng chuyển tiếp */
                }


            table {
                overflow-y: scroll;
                display: block;
            }

            .notification-banner {
                max-width: 500px;
                margin: auto;
                background-color: #333; /* Màu nền */
                color: white; /* Màu chữ */
                padding: 15px;
                position: fixed; /* Cố định vị trí trên màn hình */
                top: -100px; /* Ban đầu ẩn ở trên màn hình */
                left: 0;
                right: 0;
                text-align: center;
                border-radius: 10px;
                z-index: 1000; /* Đảm bảo thông báo nằm trên các phần tử khác */
                transition: top 0.75s ease; /* Hiệu ứng trượt */
            }

                .notification-banner.show {
                    top: 10px; /* Hiển thị thông báo */
                }

            textarea {
                resize: none;
            }

        </style>
    </head>
    <body>
        <div id="___gatsby">
            <div style="outline: none;" tabindex="-1" id="gatsby-focus-wrapper">
                @await Component.InvokeAsync("UserMenu")
                <div id="renderbody">
                    @RenderBody()
                </div>
                @await Component.InvokeAsync("Footer")
            </div>
        </div>
        <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
        <script>
            function ajax_page(url) {
                // Gửi yêu cầu GET đến URL
                fetch(url)
                    .then(response => response.text())
                    .then(data => {
                        // Tạo một DOM Parser
                        let parser = new DOMParser();

                        // Phân tích chuỗi HTML
                        let doc = parser.parseFromString(data, 'text/html');

                        // Lấy phần có id là 'renderbody'
                        var renderbody = doc.getElementById('renderbody');

                        // In nội dung của phần tử có id là 'renderbody'
                        //console.log(renderbody.innerHTML);

                        // Thêm nội dung đã lấy vào phần tử có id là 'renderbody'
                        $('#renderbody').html(renderbody.innerHTML);

                        history.pushState({}, '', url);
                    })
                    .catch((error) => {
                        console.error('Error:', error);
                    });
            };
            $('a').click(function (event) {
                event.preventDefault(); // ngăn chặn hành vi mặc định của liên kết

                var href = $(this).attr('href'); // lấy đường dẫn từ thuộc tính href của liên kết
                if (href == null) return;
                console.log(href);
                if (href === null) return;
                if (href === "") return;
                if (href.toLowerCase().includes("/user/logout")) window.location.href = href;
                if (href.toLowerCase().includes("/user/orders/cancel/")) window.location.href = href;
                if (!href.toLowerCase().includes("/user/")) window.location.href = href;
                // Gửi yêu cầu GET đến URL
                fetch(href)
                    .then(response => response.text())
                    .then(data => {
                        // Tạo một DOM Parser
                        let parser = new DOMParser();

                        // Phân tích chuỗi HTML
                        let doc = parser.parseFromString(data, 'text/html');

                        // Lấy phần có id là 'renderbody'
                        var renderbody = doc.getElementById('renderbody');

                        // In nội dung của phần tử có id là 'renderbody'
                        //console.log(renderbody.innerHTML);

                        // Thêm nội dung đã lấy vào phần tử có id là 'renderbody'
                        $('#renderbody').html(renderbody.innerHTML);

                        history.pushState({}, '', href);
                    })
                    .catch((error) => {
                        console.error('Error:', error);
                    });
            });
        </script>
        <div id="__popup">
        </div>
        <div id="notification-banner" class="notification-banner">
            Đây là nội dung thông báo của bạn.
        </div>
        <script>
            var shownoti_timeout = '';
            function shownoti(show, timeout = 3000) {
                var banner = document.getElementById("notification-banner");
                //banner.classList.remove("show");
                if (shownoti_timeout != '') clearTimeout(shownoti_timeout);
                banner.innerHTML = show;
                banner.classList.add("show");
                shownoti_timeout = setTimeout(function () {
                    banner.classList.remove("show");
                }, timeout); // xóa sau 3 giây

            }
            function sendPopUp(htmlstr) {
                var template = `
                                                <div class="w A" style="background-color: rgba(0, 0, 0, .75);display:flex;align-items: center;justify-content: center;">
                                                    <div style="width: 992px;height:500px;background-color:white;">

                                                    </div>
                                                        </div>`;
                $("#__popup").html(htmlstr);
            };
            function clearPopUp() {
                $("#__popup").html();
            };
            $(document).keydown(function (e) {
                // ESCAPE key pressed
                if (e.keyCode == 27) {
                    $("#__popup").html('');
                }
            });
            $(document).click(function (e) {
                const profileButton = document.querySelector('.prfbutton.z.db.za');
                const profileContent = document.getElementById('userprofileclick');

                if (profileButton && !profileButton.contains(e.target)) {
                    profileContent.innerHTML = '';
                }
            });

        </script>
        <a id="fb-messenger" target="_blank" rel="noreferrer">@* <img title="Messenger" class="w L M cc zc" loading="lazy" /> *@</a>
        <div id="fb-root"></div>
        <div id="fb-customer-chat" class="fb-customerchat" attribution="biz_inbox"></div>
        <div id="__dialog"></div>
        <div id="__alerter" class="a w J M ta ec ic Ie U"></div>
    </body>
}
</html>