@model (Order,List<OrderDetailView>)
@{
    ViewData["Title"] = "Lịch sử mua hàng";
    string order_str(int orderstatus_id)
    {
        switch (orderstatus_id)
        {
            case 1:
                return "Chờ tiến hành";
            case 2:
                return "Đang tiến hành";
            case 3:
                return "Hoàn thành";
            default:
                return "Không thể đọc thông tin";
        }
    }
    string actionname(int orderstatus_id, int type = 2)
    {
        switch (orderstatus_id)
        {
            case 1:
                return "Hủy tiến hành";
            case 2:
                return "";
            case 3:
                if (type == 1)
                    return "Xem chi tiết";
                else return "";
            default:
                return "Không thể đọc thông tin";
        }
    }
    string actionlink(string productid, string optionvalue, int orderstatus_id, string orderid)
    {
        switch (orderstatus_id)
        {
            case 1:
                return $"cancel";
            case 2:
                return "";
            case 3:
                return $"/user/orders/detail/api/{orderid}/{productid}/{optionvalue}";
            default:
                return "";
        }
    }
    string topricestr(long number)
    {
        string result = number.ToString();
        int num = result.Length;
        while (num > 3)
        {
            result = result.Insert(num - 3, ".");
            num -= 3;
        }
        return result;
    }
    string producttype(int type)
    {
        switch (type)
        {
            case 0:
                return "Tạo tài khoản";
            case 1:
                return "Có sẵn";
            case 2:
                return "Đăng ký/mua chính chủ";
            default:
                return "Không thể đọc thông tin";
        }
    }
}
<div style="background: #F3F4F6;">
    <div style="width: 1300px; height: 780.80px; margin:auto">
        <div style="height: 445.27px; padding: 0.91px; left: 21px; top: 4px; background: white; border-radius: 5.25px; overflow: hidden; border: 1px rgba(156, 163, 175, 0.25) solid; flex-direction: column; justify-content: flex-start; align-items: flex-start; display: inline-flex">
            <a href="/user/profile" style="align-self: stretch; height: 63.91px; padding-top: 0.91px; border-top: 0.91px rgba(156, 163, 175, 0.25) solid; flex-direction: column; justify-content: flex-start; align-items: flex-start; display: flex">
                <div style="align-self: stretch; padding-top: 21px; padding-bottom: 21px; padding-left: 26.45px; padding-right: 21px; justify-content: flex-start; align-items: flex-start; display: inline-flex">
                    <div style="width: 17.50px; height: 17.50px; position: relative">
                        <svg style="" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512">
                            <title>Tài khoản</title>
                            <path d="M256 288c79.5 0 144-64.5 144-144S335.5 0 256 0 112 64.5 112 144s64.5 144 144 144zm128 32h-55.1c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16H128C57.3 320 0 377.3 0 448v16c0 26.5 21.5 48 48 48h416c26.5 0 48-21.5 48-48v-16c0-70.7-57.3-128-128-128z"></path>
                        </svg>
                    </div>
                    <div style="padding-left: 10.50px; flex-direction: column; justify-content: flex-start; align-items: flex-start; display: inline-flex">
                        <div style="flex-direction: column; justify-content: flex-start; align-items: flex-start; display: flex">
                            <div style="color: #6B7280; font-size: 14px; font-family: Roboto; font-weight: 500; line-height: 21px; word-wrap: break-word">Tài khoản</div>
                        </div>
                    </div>
                </div>
            </a>
            <a href="/user/OrdersHistory" style="align-self: stretch;border-top: 0.91px rgba(156, 163, 175, 0.25) solid; padding-top: 21px; padding-bottom: 21px;  padding-left: 26.45px; padding-right: 21px; border-left: 5.45px #2579F2 solid; justify-content: flex-start; align-items: flex-start; display: inline-flex">
                <div style="width: 19.69px; height: 17.50px; position: relative">
                    <svg class="Xb" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 576 512">
                        <title>Lịch sử đơn hàng</title>
                        <path d="M528.12 301.319l47.273-208C578.806 78.301 567.391 64 551.99 64H159.208l-9.166-44.81C147.758 8.021 137.93 0 126.529 0H24C10.745 0 0 10.745 0 24v16c0 13.255 10.745 24 24 24h69.883l70.248 343.435C147.325 417.1 136 435.222 136 456c0 30.928 25.072 56 56 56s56-25.072 56-56c0-15.674-6.447-29.835-16.824-40h209.647C430.447 426.165 424 440.326 424 456c0 30.928 25.072 56 56 56s56-25.072 56-56c0-22.172-12.888-41.332-31.579-50.405l5.517-24.276c3.413-15.018-8.002-29.319-23.403-29.319H218.117l-6.545-32h293.145c11.206 0 20.92-7.754 23.403-18.681z"></path>
                    </svg>
                </div>
                <div style="padding-left: 10.50px; flex-direction: column; justify-content: flex-start; align-items: flex-start; display: inline-flex">
                    <div style="flex-direction: column; justify-content: flex-start; align-items: flex-start; display: flex">
                        <div style="color: black; font-size: 14px; font-family: Roboto; font-weight: 500; line-height: 21px; word-wrap: break-word">Lịch sử đơn hàng</div>
                    </div>
                </div>
            </a>
            <a href="/user/password" style="align-self: stretch; height: 63.91px; padding-top: 0.91px; border-top: 0.91px rgba(156, 163, 175, 0.25) solid; flex-direction: column; justify-content: flex-start; align-items: flex-start; display: flex">
                <div style="align-self: stretch; padding-top: 21px; padding-bottom: 21px; padding-left: 26.45px; padding-right: 21px; justify-content: flex-start; align-items: flex-start; display: inline-flex">
                    <div style="width: 21.88px; height: 17.50px; position: relative">
                        <svg class="" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 640 512">
                            <title>Mật khẩu và bảo mật</title>
                            <path d="M224 256A128 128 0 1 0 96 128a128 128 0 0 0 128 128zm96 64a63.08 63.08 0 0 1 8.1-30.5c-4.8-.5-9.5-1.5-14.5-1.5h-16.7a174.08 174.08 0 0 1-145.8 0h-16.7A134.43 134.43 0 0 0 0 422.4V464a48 48 0 0 0 48 48h280.9a63.54 63.54 0 0 1-8.9-32zm288-32h-32v-80a80 80 0 0 0-160 0v80h-32a32 32 0 0 0-32 32v160a32 32 0 0 0 32 32h224a32 32 0 0 0 32-32V320a32 32 0 0 0-32-32zM496 432a32 32 0 1 1 32-32 32 32 0 0 1-32 32zm32-144h-64v-80a32 32 0 0 1 64 0z"></path>
                        </svg>
                    </div>
                    <div style="padding-left: 10.50px; flex-direction: column; justify-content: flex-start; align-items: flex-start; display: inline-flex">
                        <div style="flex-direction: column; justify-content: flex-start; align-items: flex-start; display: flex">
                            <div style="color: #6B7280; font-size: 14px; font-family: Roboto; font-weight: 500; line-height: 21px; word-wrap: break-word">Mật khẩu và bảo mật</div>
                        </div>
                    </div>
                </div>
            </a>
        </div>
        <div style="padding: 35.91px; left: -0.28px; top: 0px; background: white; border-radius: 5.25px; border: 1px rgba(156, 163, 175, 0.25) solid; flex-direction: column; justify-content: flex-start; align-items: flex-start; gap: 12.20px; display: inline-flex">
            <div style="width: 900.62px; height: 700px;position:relative;background: white; border-radius: 5.25px; border: 1px rgba(156, 163, 175, 0.25) solid; ">
                <div style="height:100px; left: 35.91px; top: 35.91px; position:relative; flex-direction: column; justify-content: flex-start; align-items: flex-start; gap: 6.93px; display: inline-flex">
                    <div style="align-self: stretch; height: 28px; flex-direction: column; justify-content: flex-start; align-items: flex-start; display: flex">
                        <div style="align-self: stretch; color: black; font-size: 21px; font-family: Roboto; font-weight: 500; line-height: 28px; word-wrap: break-word">Lịch sử đơn hàng: "@Model.Item1.OrderID"</div>
                    </div>
                    <div style="color: #374151; font-size: 14px; font-family: Roboto; font-weight: 400; line-height: 21px; word-wrap: break-word">Ngày: @Model.Item1.Time.ToString("HH:mm:ss dd/MM/yyyy")</div>
                </div>
                <div style="width: 85%; height: 1px; margin-left:8%; border-top: 0.91px rgba(156, 163, 175, 0.25) solid"></div>

                <div style="height:100px;margin-left:5%;"><h6>Thông tin đính kèm</h6><textarea style="width:90%;height:80px;border:solid 1px;padding:5px;resize:none;" readonly>@Model.Item1.Note</textarea></div>
                <table class="table tbborder" style="margin-top:10px; height:230px;border:solid 1px">
                    <thread>
                        <tr>
                            <th style="width:10%">
                                Tên sản phẩm
                            </th>
                            <th style="width:10%">
                                Loại
                            </th>
                            <th style="width:5%">
                                Tổng tiền
                            </th>
                            <th style="width:5%">
                                Số lượng
                            </th>
                            <th>
                                Trạng thái
                            </th>
                            <th style="width:7%">
                                Tác vụ
                            </th>
                        </tr>
                    </thread>
                    <tbody>
                        @foreach (var item in Model.Item2)
                        {
                            <tr style="height:30px">
                                <td class="">
                                    <a href="/user/product/@item.ProductID/@item.ProductOptionValue">@Html.DisplayFor(modelItem => item.ProductName) - @Html.DisplayFor(modelItem => item.OptionName)</a>
                                </td>
                                <td class="">
                                    @producttype(item.Type)
                                </td>
                                <td class="">
                                    @topricestr(item.Amount)đ
                                </td>
                                <td class="">
                                    @item.Quantity
                                </td>
                                <td class="">
                                    @order_str(item.OrderStatusID)
                                </td>
                                <td class="">
                                    <button type="button" onclick="actionlink('@actionlink(item.ProductID,item.ProductOptionValue,item.OrderStatusID,item.OrderID)','@item.ProductName','@item.ProductID','@item.ProductOptionValue');" style="color:green;font-weight: 500;"><i>@actionname(item.OrderStatusID, item.Type)</i></button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
                <div style="display:none;margin-top:10px;border:solid 0.1px" id="displaytable">
                    <h6 style="margin-left:10%;margin-top:10px;" id="productname"></h6>
                    <table class="table tbborder" style="margin-top:10px; height:200px;">
                        <thread>
                            <tr>
                                <th style="width:1%">
                                    Mục 1
                                </th>
                                <th style="width:1%">
                                    Mục 2
                                </th>
                                <th style="width:1%">
                                    Tác vụ
                                </th>
                            </tr>
                        </thread>
                        <tbody id="productkey">
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    function actionlink(link,name,productid,optionvalue) {
        if (link == '' || link == null) return;
        if (link == 'cancel') shownoti('Không thể hủy', 4000);
        let displaytable = document.getElementById("displaytable");
        displaytable.style.display = "block";
        document.getElementById("productkey").innerHTML = "";
        $("#productname").html("Thông tin của \"" + name + "\"")
        fetch(link)
            .then(response => {
                if (!response.ok) {
                    throw new Error('Máy chủ không phản hồi!');
                }
                return response.json();
            })
            .then(data => {
                // Process the retrieved user data
                // console.log('User Data:', data);
                data.forEach(function (item) {
                    var htmlval = `
                        <tr style="height:30px">
                            <td class="">
                                ${item.key1}
                            </td>
                            <td class="">
                                ${item.key2}
                            </td>
                            <td class="">
                                 <i>@Html.Raw((Model.Item1.Time.AddDays(7).Date < DateTime.Now.Date) ? "" : $"<a href='/user/orders/error-rp/{Model.Item1.OrderID}&" + "${productid}&" + "${optionvalue}&" + "${item.key1}" + "' style='color: green; font-weight: 500; '>` + ((item.rp_FromUser == null)? 'Báo lỗi' : 'Xem lại báo lỗi') +`</a>")
                            </td>
                        </tr>`;
                    document.getElementById("productkey").innerHTML += htmlval;
                })
            })
            .catch(error => {
                console.error('Error:', error);
            });
    }
</script>
<style>
    td {
        flex-direction: column;
        justify-content: center;
        text-align: center;
        border: 1px rgba(156, 163, 175, 0.25) solid;
    }

    .rowdata {
        border: 0px rgba(156, 163, 175, 0.25) solid;
    }

    th {
        flex-direction: column;
        text-align: center;
        width: 10%;
        border: 1px rgba(156, 163, 175, 0.25) solid;
    }
</style>